!function(t,n){"use strict";var e=function(t,n,e){this.prev=t,this.next=n,this.value=e};t.DllNode=e;var i=function(){this.front=new e(null,null,null),this.back=new e(this.front,null,null),this.front.next=this.back};i.prototype.empty=function(){return this.front.next===this.back},i.prototype.peek=function(){return this.front.next.value},i.prototype.push=function(t){var n;n=new e(this.back.prev,this.back,t),this.back.prev=n.prev.next=n},i.prototype.shift=function(){var t;return t=this.front.next,this.front.next=t.next,t.next.prev=this.front,t.value},t.DllQueue=i;var o=function(t,n){this.value=t,this.next=n};t.Node=o;var r=function(){this.front=new o(null,null),this.back=this.front};r.prototype.empty=function(){return this.front===this.back},r.prototype.peek=function(){return this.front.next.value},r.prototype.push=function(t){this.back=this.back.next=new o(t,null)},r.prototype.shift=function(){var t;return t=this.front.next,this.front.next=t.next,this.back===t&&(this.back=this.front),t.value},t.NodeQueue=r}("undefined"==typeof exports?this.fifo={}:exports);
//# sourceMappingURL=js/dist/fifo.js.map